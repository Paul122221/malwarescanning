package com.scanner.malwarescanning.domain.service.impl;

import com.scanner.malwarescanning.domain.entity.Account;
import com.scanner.malwarescanning.domain.repository.AccountRepository;
import com.scanner.malwarescanning.domain.service.AccountService;
import com.scanner.malwarescanning.domain.service.AccountValidationService;

import java.util.List;
import java.util.logging.Logger;

/**
 * A service implementation for managing accounts, including finding, saving, and retrieving account information.
 * This service interacts with an {@link AccountRepository} for data storage and an {@link AccountValidationService}
 * for account validation.
 */
public class AccountServiceImpl implements AccountService {
    private static final Logger logger = Logger.getLogger(AccountServiceImpl.class.getName());

    private final AccountRepository accountRepository;
    private final AccountValidationService accountValidationService;

    /**
     * Creates a new instance of AccountServiceImpl with the specified dependencies.
     *
     * @param accountRepository A {@link AccountRepository} for managing account data.
     * @param accountValidationService An {@link AccountValidationService} for validating account information.
     */
    public AccountServiceImpl(AccountRepository accountRepository, AccountValidationService accountValidationService) {
        this.accountRepository = accountRepository;
        this.accountValidationService = accountValidationService;
    }

    /**
     * Finds an account by its IBAN with spaces removed.
     *
     * @param IBAN The IBAN (with spaces) to search for.
     * @return The {@link Account} with the matching IBAN (with spaces removed), or null if not found.
     */
    public Account findByIBANNoSpaces(String IBAN) {
        logger.info("Finding account by IBAN (no spaces): " + IBAN);
        return accountRepository.findByIBANNoSpaces(IBAN);
    }

    /**
     * Saves an account after performing validation and removing spaces from the IBAN.
     *
     * @param account The {@link Account} to be saved.
     */
    public void save(Account account) {
        accountValidationService.validate(account);
        String iban = account.getIban();
        String ibanNoSpace = iban.replace(" ", "");
        account.setIban(ibanNoSpace);
        accountRepository.save(account);
        logger.fine("Saved account: " + account);
    }

    /**
     * Retrieves a list of all accounts.
     *
     * @return A list of {@link Account} instances representing all accounts.
     */
    public List<Account> findAll() {
        logger.warning("Finding all accounts.");
        return accountRepository.findAll();
    }
}
