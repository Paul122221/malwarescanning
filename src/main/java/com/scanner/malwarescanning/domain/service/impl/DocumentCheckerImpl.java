package com.scanner.malwarescanning.domain.service.impl;

import com.scanner.malwarescanning.domain.entity.Account;
import com.scanner.malwarescanning.domain.service.AccountService;
import com.scanner.malwarescanning.domain.service.DocumentChecker;
import com.scanner.malwarescanning.domain.service.FileTextParser;

import java.io.File;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * A {@link DocumentChecker} implementation that checks for International Bank Account Numbers (IBANs)
 * in a text extracted from a file and performs validation against a list of banned IBANs using an {@link AccountService}.
 */
public class DocumentCheckerImpl implements DocumentChecker {
    private static final Logger logger = Logger.getLogger(DocumentCheckerImpl.class.getName());
    private FileTextParser fileTextParser;
    private AccountService accountService;

    /**
     * Creates a new instance of DocumentCheckerImpl with a FileTextParser and an AccountService.
     *
     * @param fileTextParser A {@link FileTextParser} implementation used to extract text from files.
     * @param accountService A {@link AccountService} implementation used for IBAN validation.
     */
    public DocumentCheckerImpl(FileTextParser fileTextParser, AccountService accountService) {
        this.fileTextParser = fileTextParser;
        this.accountService = accountService;
    }

    /**
     * Checks the provided file for IBANs and validates them against a list of banned IBANs.
     *
     * @param file The file to be checked for IBANs and validation.
     */
    @Override
    public void check(File file) {
        String text = fileTextParser.parse(file);

        String ibanRegex = "[A-Z]{2}\\d{2}(?:\\s?[A-Z0-9]){11,30}";
        Pattern pattern = Pattern.compile(ibanRegex);
        Matcher matcher = pattern.matcher(text);

        if (matcher.find()) {
            String iban = matcher.group();
            String ibanNoSpace = iban.replaceAll(" ", "");
            Account byIBANNoSpaces = accountService.findByIBANNoSpaces(ibanNoSpace);
            if (byIBANNoSpaces != null && byIBANNoSpaces.isBlocked()) {
                throw new RuntimeException(String.format("IBAN: %s is banned", iban));
            }
        }
        logger.info("IBAN from file is correct");
    }
}
