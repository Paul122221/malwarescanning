package com.scanner.malwarescanning.domain.service.impl;

import com.scanner.malwarescanning.domain.service.DocumentChecker;

import java.io.File;
import java.util.List;
import java.util.logging.Logger;

/**
 * A {@link DocumentChecker} implementation that combines multiple document checkers to validate a file.
 * It delegates the file validation to a list of {@link DocumentChecker} implementations and logs the result.
 */
public class CombinationDocumentChecker implements DocumentChecker {
    private static final Logger logger = Logger.getLogger(CombinationDocumentChecker.class.getName());

    private List<DocumentChecker> checkers;

    /**
     * Creates a new instance of CombinationDocumentChecker with a list of DocumentChecker implementations.
     *
     * @param checkers A list of DocumentChecker implementations to be used for file validation.
     */
    public CombinationDocumentChecker(List<DocumentChecker> checkers) {
        this.checkers = checkers;
    }

    /**
     * Validates a file using the list of DocumentCheckers and logs the result.
     *
     * @param file The file to be checked for validity.
     */
    @Override
    public void check(File file) {
        for(DocumentChecker documentChecker : this.checkers){
            documentChecker.check(file);
        }
        logger.info("File is valid");
    }
}
