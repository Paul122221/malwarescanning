package com.scanner.malwarescanning.domain.service.impl;

import com.scanner.malwarescanning.domain.service.DocumentChecker;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Locale;
import java.util.logging.Logger;

/**
 * A {@link DocumentChecker} implementation that checks whether a given file is a PDF document based on its file extension
 * and the presence of the PDF signature "%PDF" in the first bytes.
 */
public class PDFDocumentChecker implements DocumentChecker {
    private static final Logger logger = Logger.getLogger(PDFDocumentChecker.class.getName());

    /**
     * Checks whether the provided file is a PDF document.
     *
     * @param file The file to be checked for being a PDF document.
     * @throws IllegalArgumentException If the file is not a valid PDF document.
     */
    @Override
    public void check(File file) {
        try (FileInputStream fis = new FileInputStream(file)) {

            String extension = file
                    .getName()
                    .replaceAll(".+\\.(.+)$", "$1");

            String extensionLowerCase = extension.toLowerCase(Locale.ROOT);

            if (!extensionLowerCase.equals("pdf")) {
                throw new IllegalArgumentException("File should have a '.pdf' extension.");
            }

            byte[] firstBytes = new byte[4];
            int read = fis.read(firstBytes);

            String s = new String(firstBytes);

            boolean isPDF = s.equals("%PDF");
            if (!isPDF) {
                throw new IllegalArgumentException("File content does not match PDF format.");
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
        logger.info("File is a valid PDF document.");
    }
}
