package com.scanner.malwarescanning.application.service;

import com.scanner.malwarescanning.domain.service.DownloadService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.io.File;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;

@Service
@Slf4j
public class DownloadServiceImpl implements DownloadService {

    private final RestTemplate restTemplate;

    @Autowired
    public DownloadServiceImpl(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    @Override
    public File downloadFile(String url) {
        ResponseEntity<Resource> response = restTemplate.exchange(
                url, HttpMethod.GET, null, Resource.class);
        try {
            Path path = Files.createTempFile("", response.getBody().getFilename());

            if (response.getStatusCode().is2xxSuccessful()) {
                try (InputStream inputStream = response.getBody().getInputStream()) {
                    Files.copy(inputStream, path, StandardCopyOption.REPLACE_EXISTING);
                    log.info("File downloaded successfully: " + path.toString());
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                throw new RuntimeException("Failed to download file");
            }
            return path.toFile();
        } catch (Exception e) {
            throw new RuntimeException("Failed to download file");
        }
    }
}
