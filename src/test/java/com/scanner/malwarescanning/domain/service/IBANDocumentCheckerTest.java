package com.scanner.malwarescanning.domain.service;

import com.scanner.malwarescanning.domain.entity.Account;
import com.scanner.malwarescanning.domain.entity.AccountImpl;
import com.scanner.malwarescanning.domain.service.impl.IBANDocumentChecker;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import java.io.File;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

/**
 * This class contains unit tests for the {@link IBANDocumentChecker} class.
 */
@SpringBootTest
public class IBANDocumentCheckerTest {

    @Mock
    FileTextParser fileTextParserMock;

    @Mock
    AccountService accountService;

    /**
     * Tests the behavior of the {@link IBANDocumentChecker#check(File)} method when the provided file contains a valid IBAN
     * and the associated account is not blocked. It should not throw any exceptions.
     */
    @Test
    void testCheckShouldReturnNothing(){
        when(fileTextParserMock.parse(any(File.class))).thenReturn("Iban DE15300606010505780780");
        File file = new File("test.pdf");
        String text = fileTextParserMock.parse(file);
        when(accountService.findByIBANNoSpaces(any(String.class))).thenReturn(null);
        IBANDocumentChecker ibanDocumentChecker = new IBANDocumentChecker(fileTextParserMock, accountService);
        ibanDocumentChecker.check(file);
    }

    /**
     * Tests the behavior of the {@link IBANDocumentChecker#check(File)} method when the provided file contains a valid IBAN
     * and the associated account is blocked. It should throw a {@link RuntimeException}.
     */
    @Test
    void testCheckShouldThrowException(){
        when(fileTextParserMock.parse(any(File.class))).thenReturn("Iban DE15300606010505780780");
        File file = new File("test.pdf");
        String text = fileTextParserMock.parse(file);
        Account account = new AccountImpl();
        account.setBlocked(true);
        when(accountService.findByIBANNoSpaces(any(String.class))).thenReturn(account);
        IBANDocumentChecker ibanDocumentChecker = new IBANDocumentChecker(fileTextParserMock, accountService);
        assertThrows(RuntimeException.class, () -> {
            ibanDocumentChecker.check(file);
        });
    }
}
